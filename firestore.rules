rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Helper function to check if admins collection is empty
    function isFirstAdmin() {
      return !exists(/databases/$(database)/documents/admins/__sentinel__);
    }
    
    // Pending drivers collection
    match /pendingDrivers/{userId} {
      allow read: if isAdmin() || request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if isAdmin();
    }
    
    // Approved drivers collection
    match /drivers/{userId} {
      allow read: if isAdmin() || request.auth.uid == userId;
      allow write: if isAdmin();
    }
    
    // Admins collection
    match /admins/{userId} {
      // Allow creating first admin, then restrict to existing admins
      allow create: if request.auth != null && 
                      request.auth.uid == userId && 
                      (isFirstAdmin() || isAdmin());
      allow read: if request.auth.uid == userId;
      allow write: if isAdmin(); // Only existing admins can modify
    }
  }
} 